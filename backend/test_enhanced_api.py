#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è enhanced API –ì–Ω–æ–º–∞ –ì–æ—Ä–æ—Å–∫–æ–ø–∞
"""

import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
BASE_URL = "http://localhost:8000"

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health Check: {response.status_code}")
        print(f"   Response: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå Health Check failed: {e}")
        return False

def test_horoscope():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"""
    try:
        response = requests.get(f"{BASE_URL}/api/horoscope", params={"sign": "–õ–µ–≤"})
        print(f"‚úÖ Horoscope: {response.status_code}")
        data = response.json()
        print(f"   Sign: {data.get('sign')}")
        print(f"   Source: {data.get('source')}")
        print(f"   Text: {data.get('text')[:50]}...")
        return True
    except Exception as e:
        print(f"‚ùå Horoscope test failed: {e}")
        return False

def test_premium_horoscope():
    """–¢–µ—Å—Ç –ø—Ä–µ–º–∏—É–º –≥–æ—Ä–æ—Å–∫–æ–ø–∞"""
    try:
        test_data = {
            "initData": "test_data",
            "sign": "–û–≤–µ–Ω"
        }
        response = requests.post(f"{BASE_URL}/api/horoscope/premium", json=test_data)
        print(f"‚úÖ Premium Horoscope: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Premium features: {list(data.get('premium_data', {}).keys())}")
        return True
    except Exception as e:
        print(f"‚ùå Premium horoscope test failed: {e}")
        return False

def test_share():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–ø–æ—Å—Ç–∞"""
    try:
        test_data = {
            "initData": "test_data",
            "content_type": "horoscope",
            "content": {"sign": "–õ–µ–≤", "text": "–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø"},
            "share_text": "–ú–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!"
        }
        response = requests.post(f"{BASE_URL}/api/share", json=test_data)
        print(f"‚úÖ Share Content: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Share URL: {data.get('share_url')}")
        return True
    except Exception as e:
        print(f"‚ùå Share test failed: {e}")
        return False

def test_analytics():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    try:
        response = requests.get(f"{BASE_URL}/api/analytics/user", params={"init_data": "test_data"})
        print(f"‚úÖ Analytics: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Total actions: {data.get('total_actions', 0)}")
        return True
    except Exception as e:
        print(f"‚ùå Analytics test failed: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üßô‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Gnome Horoscope API")
    print("=" * 50)
    
    tests = [
        test_health,
        test_horoscope,
        test_premium_horoscope,
        test_share,
        test_analytics
    ]
    
    passed = 0
    for test in tests:
        if test():
            passed += 1
        print()
    
    print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == len(tests):
        print("üéâ –í—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚ú® –î–æ—Å—Ç—É–ø–Ω—ã: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è, Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –°–æ—Ü—Å–µ—Ç–∏, –ü—Ä–µ–º–∏—É–º, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")

if __name__ == "__main__":
    main()#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è enhanced API –ì–Ω–æ–º–∞ –ì–æ—Ä–æ—Å–∫–æ–ø–∞
"""

import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
BASE_URL = "http://localhost:8000"

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get(f"{BASE_URL}/health")
        print(f"‚úÖ Health Check: {response.status_code}")
        print(f"   Response: {response.json()}")
        return True
    except Exception as e:
        print(f"‚ùå Health Check failed: {e}")
        return False

def test_horoscope():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞"""
    try:
        response = requests.get(f"{BASE_URL}/api/horoscope", params={"sign": "–õ–µ–≤"})
        print(f"‚úÖ Horoscope: {response.status_code}")
        data = response.json()
        print(f"   Sign: {data.get('sign')}")
        print(f"   Source: {data.get('source')}")
        print(f"   Text: {data.get('text')[:50]}...")
        return True
    except Exception as e:
        print(f"‚ùå Horoscope test failed: {e}")
        return False

def test_premium_horoscope():
    """–¢–µ—Å—Ç –ø—Ä–µ–º–∏—É–º –≥–æ—Ä–æ—Å–∫–æ–ø–∞"""
    try:
        test_data = {
            "initData": "test_data",
            "sign": "–û–≤–µ–Ω"
        }
        response = requests.post(f"{BASE_URL}/api/horoscope/premium", json=test_data)
        print(f"‚úÖ Premium Horoscope: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Premium features: {list(data.get('premium_data', {}).keys())}")
        return True
    except Exception as e:
        print(f"‚ùå Premium horoscope test failed: {e}")
        return False

def test_share():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–ø–æ—Å—Ç–∞"""
    try:
        test_data = {
            "initData": "test_data",
            "content_type": "horoscope",
            "content": {"sign": "–õ–µ–≤", "text": "–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø"},
            "share_text": "–ú–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!"
        }
        response = requests.post(f"{BASE_URL}/api/share", json=test_data)
        print(f"‚úÖ Share Content: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Share URL: {data.get('share_url')}")
        return True
    except Exception as e:
        print(f"‚ùå Share test failed: {e}")
        return False

def test_analytics():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    try:
        response = requests.get(f"{BASE_URL}/api/analytics/user", params={"init_data": "test_data"})
        print(f"‚úÖ Analytics: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   Total actions: {data.get('total_actions', 0)}")
        return True
    except Exception as e:
        print(f"‚ùå Analytics test failed: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üßô‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Enhanced Gnome Horoscope API")
    print("=" * 50)
    
    tests = [
        test_health,
        test_horoscope,
        test_premium_horoscope,
        test_share,
        test_analytics
    ]
    
    passed = 0
    for test in tests:
        if test():
            passed += 1
        print()
    
    print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == len(tests):
        print("üéâ –í—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚ú® –î–æ—Å—Ç—É–ø–Ω—ã: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è, Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –°–æ—Ü—Å–µ—Ç–∏, –ü—Ä–µ–º–∏—É–º, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏")

if __name__ == "__main__":
    main()