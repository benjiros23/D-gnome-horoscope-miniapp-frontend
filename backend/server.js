import express from 'express';
import cors from 'cors';

const app = express();
const PORT = process.env.PORT || 10000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.use(cors({
  origin: [
    'http://localhost:3000',
    'https://web.telegram.org',
    'https://d-gnome-horoscope-miniapp-frontend.vercel.app'
  ],
  methods: ['GET', 'POST', 'OPTIONS'],
  credentials: true
}));

app.use(express.json({ limit: '10mb' }));
app.options('*', cors());

// –î–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤
const horoscopeTexts = {
  '–û–≤–µ–Ω': [
    '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥ —Å–æ–≤–µ—Ç—É–µ—Ç –±—ã—Ç—å —Å–º–µ–ª–µ–µ –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è! –í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è –∑–∞–∂–∂–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
    '–ö—É–∑–Ω–µ—á–Ω–∞—è –Ω–∞–∫–æ–≤–∞–ª—å–Ω—è –≥–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏. –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ –∏ –Ω–µ –±–æ—è—Ç—å—Å—è –ø–µ—Ä–≤—ã—Ö —à–∞–≥–æ–≤!',
    '–û–≥–Ω–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è. –í–∞—à–∞ —Å—Ç—Ä–∞—Å—Ç—å –æ—Ç–∫—Ä–æ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏.'
  ],
  '–¢–µ–ª–µ—Ü': [
    '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥ –æ–±–Ω–∞—Ä—É–∂–∏–ª –Ω–æ–≤—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞ —Ç–µ—Ä–ø–µ–Ω–∏—è. –ù–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ø—Ä–∏–Ω–µ—Å–µ—Ç –∂–µ–ª–∞–µ–º—ã–µ –ø–ª–æ–¥—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
    '–ó–µ–º–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç: –ª—É—á—à–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ. –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å - –≤–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è —Å–∏–ª–∞ —Å–µ–≥–æ–¥–Ω—è.',
    '–ì–Ω–æ–º—å–∏ –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –ø—Ä–∏—É–º–Ω–æ–∂–∞—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è —É–ø–æ—Ä—Å—Ç–≤—É. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä –≥–æ—Ç–æ–≤ –æ–¥–∞—Ä–∏—Ç—å –≤–∞—Å —â–µ–¥—Ä–æ.'
  ],
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': [
    '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞ –∑–∞–ø–∏—Å–∞–ª –Ω–æ–≤—É—é –º—É–¥—Ä–æ—Å—Ç—å –≤ –ª–µ—Ç–æ–ø–∏—Å–∏. –û–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä–æ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
    '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º. –ó–∞–¥–∞–≤–∞–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∞—à–µ –æ—Ä—É–∂–∏–µ!',
    '–í–µ—Ç–µ—Ä –ø–µ—Ä–µ–º–µ–Ω –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è. –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–¥–µ—è–º–∏ –∏ –æ–ø—ã—Ç–æ–º.'
  ],
  '–†–∞–∫': [
    '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π —É–∫—Ä–µ–ø–ª—è–µ—Ç —Å–µ–º–µ–π–Ω—ã–π –æ—á–∞–≥. –ó–∞–±–æ—Ç–∞ –æ –±–ª–∏–∑–∫–∏—Ö –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–∑–∞–∏–º–Ω—É—é —Ç–µ–ø–ª–æ—Ç—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.',
    '–ò–Ω—Ç—É–∏—Ü–∏—è –ø–æ–¥—Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É –≤ –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö.',
    '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –∏—Å—Ç–∏–Ω–Ω—ã–µ –º–æ—Ç–∏–≤—ã –æ–∫—Ä—É–∂–∞—é—â–∏—Ö –ª—é–¥–µ–π.'
  ],
  '–õ–µ–≤': [
    '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤ —Å–æ–∑—ã–≤–∞–µ—Ç —Å–æ–≤–µ—Ç! –í–∞—à–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç –¥—Ä—É–≥–∏—Ö –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
    '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–æ–µ –≤–µ–ª–∏—á–∏–µ –ø—Ä–æ—è–≤–∏—Ç—Å—è –≤ –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã—Ö –ø–æ—Å—Ç—É–ø–∫–∞—Ö. –ë—É–¥—å—Ç–µ —â–µ–¥—Ä—ã–º–∏ - –¥–æ–±—Ä–æ—Ç–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è —Å—Ç–æ—Ä–∏—Ü–µ–π.',
    '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –ª—å–µ—Ç—Å—è —Ä–µ–∫–æ–π. –°–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.'
  ],
  '–î–µ–≤–∞': [
    '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π –Ω–∞—Ç–æ—á–∏–ª –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ –¥–µ–ª–∞—Ö.',
    '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫. –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø—Ä–∏–Ω–µ—Å–µ—Ç –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.',
    '–¢—Ä—É–¥–æ–ª—é–±–∏–µ –∏ —Ç–æ—á–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä–æ—é—Ç –ø—É—Ç—å –∫ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–º—É —É—Å–ø–µ—Ö—É. –ö–∞–∂–¥–∞—è –º–µ–ª–æ—á—å –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ.'
  ],
  '–í–µ—Å—ã': [
    '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π –≤–∑–≤–µ—à–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤. –ì–∞—Ä–º–æ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ –≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.',
    '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ —Ä–∞–∑—Ä–µ—à–∏—Ç —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –ò—â–∏—Ç–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã –¥–ª—è –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω.',
    '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –±–∞–ª–∞–Ω—Å –≤–æ–π–¥—É—Ç –≤ –∂–∏–∑–Ω—å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏.'
  ],
  '–°–∫–æ—Ä–ø–∏–æ–Ω': [
    '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –¥—Ä–µ–≤–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç—ã. –ì–ª—É–±–æ–∫–∏–µ –∏—Å—Ç–∏–Ω—ã —Å—Ç–∞–Ω—É—Ç —è—Å–Ω—ã–º–∏ –¥–ª—è –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–º–∞.',
    '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑–Ω—É—Ç—Ä–∏. –ü—Ä–∏–º–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω—ã —Å –º—É–∂–µ—Å—Ç–≤–æ–º - –æ–Ω–∏ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ —Ä–æ—Å—Ç—É.',
    '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–µ –æ–∑–∞—Ä–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –º–æ—Ç–∏–≤—ã –∏ –Ω–∞–π—Ç–∏ –∏—Å—Ç–∏–Ω—É.'
  ],
  '–°—Ç—Ä–µ–ª–µ—Ü': [
    '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç! –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∂–¥—É—Ç –∑–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–æ–º - —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã.',
    '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–∏—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ –º–∏—Ä–∞. –£—á–∏—Ç–µ—Å—å —É –∫–∞–∂–¥–æ–≥–æ –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.',
    '–°–≤–æ–±–æ–¥–∞ –¥—É—Ö–∞ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è. –ù–µ –ø–æ–∑–≤–æ–ª—è–π—Ç–µ –Ω–∏–∫–æ–º—É –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –º–µ—á—Ç—ã.'
  ],
  '–ö–æ–∑–µ—Ä–æ–≥': [
    '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å –ø–æ–∫–æ—Ä–∏–ª –Ω–æ–≤—É—é –≤–µ—Ä—à–∏–Ω—É! –¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∑–∞–≤–µ—Ç–Ω–æ–π —Ü–µ–ª–∏.',
    '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ - –≤–µ—Ä–Ω—ã–µ —Å–ø—É—Ç–Ω–∏–∫–∏ —É—Å–ø–µ—Ö–∞. –ú–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ –∏–¥–∏—Ç–µ –∫ –º–µ—á—Ç–µ.',
    '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç —Ä–∞—Å—Ç–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏. –ù–∞ –≤–∞—Å –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.'
  ],
  '–í–æ–¥–æ–ª–µ–π': [
    '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª –Ω–æ–≤–æ–µ —á—É–¥–æ! –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏–∑–º–µ–Ω—è—Ç –ø—Ä–∏–≤—ã—á–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –≤–µ—â–µ–π –∫ –ª—É—á—à–µ–º—É.',
    '–ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ù–µ –±–æ–π—Ç–µ—Å—å –±—ã—Ç—å –Ω–µ —Ç–∞–∫–∏–º –∫–∞–∫ –≤—Å–µ.',
    '–î—Ä—É–∂–µ—Å–∫–∏–µ —Å–≤—è–∑–∏ –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ. –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–∞—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.'
  ],
  '–†—ã–±—ã': [
    '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å –ø–æ–π–º–∞–ª –∑–æ–ª–æ—Ç—É—é —Ä—ã–±–∫—É –∂–µ–ª–∞–Ω–∏–π! –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç —Å–∞–º—ã–µ —Å–º–µ–ª—ã–µ –º–µ—á—Ç—ã.',
    '–≠–º–ø–∞—Ç–∏—è –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–¥—É—Ç –≥–ª—É–±–æ–∫–∏–µ —Å–≤—è–∑–∏. –í–∞—à–∞ –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω–æ–π.',
    '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–≥—É—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Ç–µ—á–µ–Ω–∏—è —Å—É–¥—å–±—ã –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç—å.'
  ]
};

const dayCards = [
  { title: '–ú–æ–ª–æ—Ç –¢–≤–æ—Ä—Ü–∞', text: '–°–µ–≥–æ–¥–Ω—è –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∏–ª–æ–π —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —ç–Ω–µ—Ä–≥–∏—é –º—É–¥—Ä–æ!' },
  { title: '–ö—Ä–∏—Å—Ç–∞–ª–ª –ú—É–¥—Ä–æ—Å—Ç–∏', text: '–Ø—Å–Ω–æ—Å—Ç—å –º—ã—Å–ª–∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–æ–π –∑–∞–¥–∞—á–∏. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –∏–Ω—Ç—É–∏—Ü–∏–∏.' },
  { title: '–©–∏—Ç –ó–∞—â–∏—Ç—ã', text: '–í—ã –ø–æ–¥ –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π. –°–º–µ–ª–æ –∏–¥–∏—Ç–µ –≤–ø–µ—Ä–µ–¥, –Ω–µ –±–æ—è—Å—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.' },
  { title: '–ó–µ–ª—å–µ –£–¥–∞—á–∏', text: '–§–æ—Ä—Ç—É–Ω–∞ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–∞ –∫ –≤–∞–º! –•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.' },
  { title: '–ö–ª—é—á –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π', text: '–ü–µ—Ä–µ–¥ –≤–∞–º–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –¥–≤–µ—Ä–∏. –ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º.' }
];

const adviceTexts = [
  '–ü–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –≥–Ω–æ–º –Ω–∞—á–∏–Ω–∞–ª —Å –º–∞–ª–æ–≥–æ. –í–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –∏–∑ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤.',
  '–ú—É–¥—Ä—ã–π –≥–Ω–æ–º –∑–Ω–∞–µ—Ç: –ª—É—á—à–µ –æ–¥–∏–Ω —Ä–∞–∑ —É–≤–∏–¥–µ—Ç—å, —á–µ–º —Å—Ç–æ —Ä–∞–∑ —É—Å–ª—ã—à–∞—Ç—å. –î–µ–π—Å—Ç–≤—É–π—Ç–µ!',
  '–í –∫—É–∑–Ω–∏—Ü–µ –∂–∏–∑–Ω–∏ –∫–∞–∂–¥—ã–π —É–¥–∞—Ä –º–æ–ª–æ—Ç–∞ –≤–∞–∂–µ–Ω. –ù–µ –ø—Ä–µ–Ω–µ–±—Ä–µ–≥–∞–π—Ç–µ –º–µ–ª–æ—á–∞–º–∏.',
  '–ó–æ–ª–æ—Ç–æ –Ω–µ —Ä–∂–∞–≤–µ–µ—Ç, –∞ –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ —Å—Ç–∞—Ä–µ–µ—Ç. –ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã–º–∏ –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º.'
];

// –£—Ç–∏–ª–∏—Ç—ã
function getRandomItem(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function calculateLifeNumber(birthDate) {
  const digits = birthDate.replace(/-/g, '').split('').map(Number);
  let sum = digits.reduce((a, b) => a + b, 0);
  while (sum > 9) {
    sum = sum.toString().split('').map(Number).reduce((a, b) => a + b, 0);
  }
  return sum;
}

// API Routes

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
app.get('/', (req, res) => {
  res.json({
    message: 'üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    version: '1.0.0',
    status: 'active',
    timestamp: new Date().toISOString(),
    endpoints: {
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>': '–ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø',
      'POST /api/day-card': '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è',
      'GET /api/advice': '–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è',
      'POST /api/numerology': '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç',
      'POST /api/compatibility': '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤',
      'GET /api/mercury': '–°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è'
    }
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø
app.get('/api/horoscope', (req, res) => {
  try {
    const { sign } = req.query;
    
    if (!sign || !horoscopeTexts[sign]) {
      return res.status(400).json({
        error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞',
        supportedSigns: Object.keys(horoscopeTexts)
      });
    }
    
    const text = getRandomItem(horoscopeTexts[sign]);
    
    res.json({
      sign,
      text,
      date: new Date().toISOString(),
      type: 'horoscope',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/horoscope:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø' });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
app.post('/api/day-card', (req, res) => {
  try {
    const card = getRandomItem(dayCards);
    
    res.json({
      ...card,
      date: new Date().toISOString(),
      type: 'day-card',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/day-card:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è' });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è
app.get('/api/advice', (req, res) => {
  try {
    const advice = getRandomItem(adviceTexts);
    
    res.json({
      text: advice,
      date: new Date().toISOString(),
      type: 'advice',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/advice:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç' });
  }
});

// –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è
app.post('/api/numerology', (req, res) => {
  try {
    const { birthDate } = req.body;
    
    if (!birthDate) {
      return res.status(400).json({ error: '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' });
    }
    
    const lifeNumber = calculateLifeNumber(birthDate);
    const numerologyData = {
      1: { character: '–õ–∏–¥–µ—Ä –∏ –ø–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü. –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –≤–µ—Å—Ç–∏ –ª—é–¥–µ–π –∑–∞ —Å–æ–±–æ–π.' },
      2: { character: '–ú–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü –∏ –¥–∏–ø–ª–æ–º–∞—Ç. –ì–∞—Ä–º–æ–Ω–∏—è - –≤–∞—à–∞ —Å—É–ø–µ—Ä—Å–∏–ª–∞.', destiny: '–û–±—ä–µ–¥–∏–Ω—è—Ç—å –ª—é–¥–µ–π –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å.' },
      3: { character: '–¢–≤–æ—Ä–µ—Ü –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å. –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫—Ä–æ–≤–∏.', destiny: '–ù–µ—Å—Ç–∏ –∫—Ä–∞—Å–æ—Ç—É –∏ —Ä–∞–¥–æ—Å—Ç—å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ.' },
      4: { character: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å - –æ—Å–Ω–æ–≤–∞.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—á–Ω—ã–µ –æ—Å–Ω–æ–≤—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ.' },
      5: { character: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –ü–µ—Ä–µ–º–µ–Ω—ã - —Å—Ç–∏—Ö–∏—è.', destiny: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä –∏ –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º.' },
      6: { character: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ —Å–µ–º—å–∏. –õ—é–±–æ–≤—å - —Å–∏–ª–∞.', destiny: '–ù–µ—Å—Ç–∏ –∑–∞–±–æ—Ç—É –∏ –∏—Å—Ü–µ–ª–µ–Ω–∏–µ –ª—é–¥—è–º.' },
      7: { character: '–ú—É–¥—Ä–µ—Ü –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∏—Å—Ç–∏–Ω—ã. –î—É—Ö–æ–≤–Ω–æ—Å—Ç—å.', destiny: '–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–∞–π–Ω—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è –º—É–¥—Ä–æ—Å—Ç—å—é.' },
      8: { character: '–ú–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –£—Å–ø–µ—Ö —á–µ—Ä–µ–∑ —Ç—Ä—É–¥.', destiny: '–î–æ—Å—Ç–∏—á—å –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ –ø–æ–º–æ—á—å –¥—Ä—É–≥–∏–º.' },
      9: { character: '–ì—É–º–∞–Ω–∏—Å—Ç –∏ –∞–ª—å—Ç—Ä—É–∏—Å—Ç. –°–ª—É–∂–µ–Ω–∏–µ –ª—é–¥—è–º.', destiny: '–ù–µ—Å—Ç–∏ —Å–≤–µ—Ç –∑–Ω–∞–Ω–∏–π –≤—Å–µ–º—É —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤—É.' }
    };
    
    const data = numerologyData[lifeNumber];
    
    res.json({
      number: lifeNumber,
      ...data,
      birthDate,
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/numerology:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é' });
  }
});

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
app.post('/api/compatibility', (req, res) => {
  try {
    const { sign1, sign2 } = req.body;
    
    if (!sign1 || !sign2) {
      return res.status(400).json({ error: '–û–±–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
    }
    
    const compatibility = Math.floor(Math.random() * 40) + 60; // 60-100%
    let emoji = compatibility >= 90 ? 'üíñ' : compatibility >= 80 ? 'üíï' : compatibility >= 70 ? '‚ù§Ô∏è' : 'üíõ';
    
    let description;
    if (compatibility >= 90) description = '–ò–¥–µ–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞! –ó–≤–µ–∑–¥—ã –±–ª–∞–≥–æ—Å–ª–æ–≤–ª—è—é—Ç –≤–∞—à —Å–æ—é–∑.';
    else if (compatibility >= 80) description = '–û—Ç–ª–∏—á–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å! –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –¥–æ–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞.';
    else if (compatibility >= 70) description = '–•–æ—Ä–æ—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è! –ù–µ–º–Ω–æ–≥–æ —É—Å–∏–ª–∏–π - –∏ –±—É–¥–µ—Ç–µ –Ω–µ—Ä–∞–∑–ª—É—á–Ω—ã.';
    else description = '–°—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å. –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ –≤–º–µ—Å—Ç–µ.';
    
    res.json({
      sign1,
      sign2,
      percentage: compatibility,
      emoji,
      description,
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/compatibility:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' });
  }
});

// –°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è
app.get('/api/mercury', (req, res) => {
  try {
    const isRetrograde = Math.random() > 0.7;
    
    res.json({
      isRetrograde,
      period: isRetrograde ? '–†–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞' : '–î–∏—Ä–µ–∫—Ç–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ',
      description: isRetrograde 
        ? '–ú–µ—Ä–∫—É—Ä–∏–π —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π. –í—Ä–µ–º—è –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã —Å —Ç–µ—Ö–Ω–∏–∫–æ–π.'
        : '–ú–µ—Ä–∫—É—Ä–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏. –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤.',
      date: new Date().toISOString(),
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/mercury:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è' });
  }
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use('/api/*', (req, res) => {
  res.status(404).json({
    error: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    availableEndpoints: [
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>',
      'POST /api/day-card',
      'GET /api/advice', 
      'POST /api/numerology',
      'POST /api/compatibility',
      'GET /api/mercury'
    ]
  });
});

app.listen(PORT, () => {
  console.log(`üßô‚Äç‚ôÇÔ∏è –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`Node.js –≤–µ—Ä—Å–∏—è: ${process.version}`);
});
import express from 'express';
import cors from 'cors';

const app = express();
const PORT = process.env.PORT || 10000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.use(cors({
  origin: [
    'http://localhost:3000',
    'https://web.telegram.org',
    'https://d-gnome-horoscope-miniapp-frontend.vercel.app'
  ],
  methods: ['GET', 'POST', 'OPTIONS'],
  credentials: true
}));

app.use(express.json({ limit: '10mb' }));
app.options('*', cors());

// –î–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤
const horoscopeTexts = {
  '–û–≤–µ–Ω': [
    '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥ —Å–æ–≤–µ—Ç—É–µ—Ç –±—ã—Ç—å —Å–º–µ–ª–µ–µ –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è! –í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è –∑–∞–∂–∂–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
    '–ö—É–∑–Ω–µ—á–Ω–∞—è –Ω–∞–∫–æ–≤–∞–ª—å–Ω—è –≥–æ—Ç–æ–≤–∞ –ø—Ä–∏–Ω—è—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏. –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ –∏ –Ω–µ –±–æ—è—Ç—å—Å—è –ø–µ—Ä–≤—ã—Ö —à–∞–≥–æ–≤!',
    '–û–≥–Ω–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è. –í–∞—à–∞ —Å—Ç—Ä–∞—Å—Ç—å –æ—Ç–∫—Ä–æ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏.'
  ],
  '–¢–µ–ª–µ—Ü': [
    '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥ –æ–±–Ω–∞—Ä—É–∂–∏–ª –Ω–æ–≤—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞ —Ç–µ—Ä–ø–µ–Ω–∏—è. –ù–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ø—Ä–∏–Ω–µ—Å–µ—Ç –∂–µ–ª–∞–µ–º—ã–µ –ø–ª–æ–¥—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
    '–ó–µ–º–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç: –ª—É—á—à–µ –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ. –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å - –≤–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è —Å–∏–ª–∞ —Å–µ–≥–æ–¥–Ω—è.',
    '–ì–Ω–æ–º—å–∏ –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –ø—Ä–∏—É–º–Ω–æ–∂–∞—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è —É–ø–æ—Ä—Å—Ç–≤—É. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä –≥–æ—Ç–æ–≤ –æ–¥–∞—Ä–∏—Ç—å –≤–∞—Å —â–µ–¥—Ä–æ.'
  ],
  '–ë–ª–∏–∑–Ω–µ—Ü—ã': [
    '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞ –∑–∞–ø–∏—Å–∞–ª –Ω–æ–≤—É—é –º—É–¥—Ä–æ—Å—Ç—å –≤ –ª–µ—Ç–æ–ø–∏—Å–∏. –û–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä–æ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
    '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º. –ó–∞–¥–∞–≤–∞–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∞—à–µ –æ—Ä—É–∂–∏–µ!',
    '–í–µ—Ç–µ—Ä –ø–µ—Ä–µ–º–µ–Ω –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è. –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞ –∏–¥–µ—è–º–∏ –∏ –æ–ø—ã—Ç–æ–º.'
  ],
  '–†–∞–∫': [
    '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π —É–∫—Ä–µ–ø–ª—è–µ—Ç —Å–µ–º–µ–π–Ω—ã–π –æ—á–∞–≥. –ó–∞–±–æ—Ç–∞ –æ –±–ª–∏–∑–∫–∏—Ö –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–∑–∞–∏–º–Ω—É—é —Ç–µ–ø–ª–æ—Ç—É –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.',
    '–ò–Ω—Ç—É–∏—Ü–∏—è –ø–æ–¥—Å–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É –≤ –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö.',
    '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –∏—Å—Ç–∏–Ω–Ω—ã–µ –º–æ—Ç–∏–≤—ã –æ–∫—Ä—É–∂–∞—é—â–∏—Ö –ª—é–¥–µ–π.'
  ],
  '–õ–µ–≤': [
    '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤ —Å–æ–∑—ã–≤–∞–µ—Ç —Å–æ–≤–µ—Ç! –í–∞—à–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç –¥—Ä—É–≥–∏—Ö –Ω–∞ –≤–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
    '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–æ–µ –≤–µ–ª–∏—á–∏–µ –ø—Ä–æ—è–≤–∏—Ç—Å—è –≤ –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã—Ö –ø–æ—Å—Ç—É–ø–∫–∞—Ö. –ë—É–¥—å—Ç–µ —â–µ–¥—Ä—ã–º–∏ - –¥–æ–±—Ä–æ—Ç–∞ –≤–µ—Ä–Ω–µ—Ç—Å—è —Å—Ç–æ—Ä–∏—Ü–µ–π.',
    '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –ª—å–µ—Ç—Å—è —Ä–µ–∫–æ–π. –°–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.'
  ],
  '–î–µ–≤–∞': [
    '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π –Ω–∞—Ç–æ—á–∏–ª –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ –¥–µ–ª–∞—Ö.',
    '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å –ø–æ–º–æ–∂–µ—Ç –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫. –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø—Ä–∏–Ω–µ—Å–µ—Ç –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.',
    '–¢—Ä—É–¥–æ–ª—é–±–∏–µ –∏ —Ç–æ—á–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä–æ—é—Ç –ø—É—Ç—å –∫ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–º—É —É—Å–ø–µ—Ö—É. –ö–∞–∂–¥–∞—è –º–µ–ª–æ—á—å –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ.'
  ],
  '–í–µ—Å—ã': [
    '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π –≤–∑–≤–µ—à–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤. –ì–∞—Ä–º–æ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ –≤ –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.',
    '–î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ —Ä–∞–∑—Ä–µ—à–∏—Ç —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã. –ò—â–∏—Ç–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã –¥–ª—è –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω.',
    '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –±–∞–ª–∞–Ω—Å –≤–æ–π–¥—É—Ç –≤ –∂–∏–∑–Ω—å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏.'
  ],
  '–°–∫–æ—Ä–ø–∏–æ–Ω': [
    '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –¥—Ä–µ–≤–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç—ã. –ì–ª—É–±–æ–∫–∏–µ –∏—Å—Ç–∏–Ω—ã —Å—Ç–∞–Ω—É—Ç —è—Å–Ω—ã–º–∏ –¥–ª—è –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–º–∞.',
    '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∏–∑–Ω—É—Ç—Ä–∏. –ü—Ä–∏–º–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω—ã —Å –º—É–∂–µ—Å—Ç–≤–æ–º - –æ–Ω–∏ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ —Ä–æ—Å—Ç—É.',
    '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–µ –æ–∑–∞—Ä–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –ø–æ–Ω—è—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –º–æ—Ç–∏–≤—ã –∏ –Ω–∞–π—Ç–∏ –∏—Å—Ç–∏–Ω—É.'
  ],
  '–°—Ç—Ä–µ–ª–µ—Ü': [
    '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç! –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∂–¥—É—Ç –∑–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–æ–º - —Ä–∞—Å—à–∏—Ä—è–π—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã.',
    '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –º—É–¥—Ä–æ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–∏—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ –º–∏—Ä–∞. –£—á–∏—Ç–µ—Å—å —É –∫–∞–∂–¥–æ–≥–æ –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.',
    '–°–≤–æ–±–æ–¥–∞ –¥—É—Ö–∞ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è. –ù–µ –ø–æ–∑–≤–æ–ª—è–π—Ç–µ –Ω–∏–∫–æ–º—É –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –º–µ—á—Ç—ã.'
  ],
  '–ö–æ–∑–µ—Ä–æ–≥': [
    '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å –ø–æ–∫–æ—Ä–∏–ª –Ω–æ–≤—É—é –≤–µ—Ä—à–∏–Ω—É! –¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∑–∞–≤–µ—Ç–Ω–æ–π —Ü–µ–ª–∏.',
    '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ - –≤–µ—Ä–Ω—ã–µ —Å–ø—É—Ç–Ω–∏–∫–∏ —É—Å–ø–µ—Ö–∞. –ú–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ –∏–¥–∏—Ç–µ –∫ –º–µ—á—Ç–µ.',
    '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç —Ä–∞—Å—Ç–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏. –ù–∞ –≤–∞—Å –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.'
  ],
  '–í–æ–¥–æ–ª–µ–π': [
    '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª –Ω–æ–≤–æ–µ —á—É–¥–æ! –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏–∑–º–µ–Ω—è—Ç –ø—Ä–∏–≤—ã—á–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –≤–µ—â–µ–π –∫ –ª—É—á—à–µ–º—É.',
    '–ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ù–µ –±–æ–π—Ç–µ—Å—å –±—ã—Ç—å –Ω–µ —Ç–∞–∫–∏–º –∫–∞–∫ –≤—Å–µ.',
    '–î—Ä—É–∂–µ—Å–∫–∏–µ —Å–≤—è–∑–∏ –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ. –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–∞—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.'
  ],
  '–†—ã–±—ã': [
    '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å –ø–æ–π–º–∞–ª –∑–æ–ª–æ—Ç—É—é —Ä—ã–±–∫—É –∂–µ–ª–∞–Ω–∏–π! –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–∏—Ç —Å–∞–º—ã–µ —Å–º–µ–ª—ã–µ –º–µ—á—Ç—ã.',
    '–≠–º–ø–∞—Ç–∏—è –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–¥—É—Ç –≥–ª—É–±–æ–∫–∏–µ —Å–≤—è–∑–∏. –í–∞—à–∞ –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω–æ–π.',
    '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–≥—É—Ç –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Ç–µ—á–µ–Ω–∏—è —Å—É–¥—å–±—ã –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç—å.'
  ]
};

const dayCards = [
  { title: '–ú–æ–ª–æ—Ç –¢–≤–æ—Ä—Ü–∞', text: '–°–µ–≥–æ–¥–Ω—è –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∏–ª–æ–π —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —ç–Ω–µ—Ä–≥–∏—é –º—É–¥—Ä–æ!' },
  { title: '–ö—Ä–∏—Å—Ç–∞–ª–ª –ú—É–¥—Ä–æ—Å—Ç–∏', text: '–Ø—Å–Ω–æ—Å—Ç—å –º—ã—Å–ª–∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–æ–π –∑–∞–¥–∞—á–∏. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –∏–Ω—Ç—É–∏—Ü–∏–∏.' },
  { title: '–©–∏—Ç –ó–∞—â–∏—Ç—ã', text: '–í—ã –ø–æ–¥ –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π. –°–º–µ–ª–æ –∏–¥–∏—Ç–µ –≤–ø–µ—Ä–µ–¥, –Ω–µ –±–æ—è—Å—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.' },
  { title: '–ó–µ–ª—å–µ –£–¥–∞—á–∏', text: '–§–æ—Ä—Ç—É–Ω–∞ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–∞ –∫ –≤–∞–º! –•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.' },
  { title: '–ö–ª—é—á –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π', text: '–ü–µ—Ä–µ–¥ –≤–∞–º–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –¥–≤–µ—Ä–∏. –ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º.' }
];

const adviceTexts = [
  '–ü–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –≥–Ω–æ–º –Ω–∞—á–∏–Ω–∞–ª —Å –º–∞–ª–æ–≥–æ. –í–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –∏–∑ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤.',
  '–ú—É–¥—Ä—ã–π –≥–Ω–æ–º –∑–Ω–∞–µ—Ç: –ª—É—á—à–µ –æ–¥–∏–Ω —Ä–∞–∑ —É–≤–∏–¥–µ—Ç—å, —á–µ–º —Å—Ç–æ —Ä–∞–∑ —É—Å–ª—ã—à–∞—Ç—å. –î–µ–π—Å—Ç–≤—É–π—Ç–µ!',
  '–í –∫—É–∑–Ω–∏—Ü–µ –∂–∏–∑–Ω–∏ –∫–∞–∂–¥—ã–π —É–¥–∞—Ä –º–æ–ª–æ—Ç–∞ –≤–∞–∂–µ–Ω. –ù–µ –ø—Ä–µ–Ω–µ–±—Ä–µ–≥–∞–π—Ç–µ –º–µ–ª–æ—á–∞–º–∏.',
  '–ó–æ–ª–æ—Ç–æ –Ω–µ —Ä–∂–∞–≤–µ–µ—Ç, –∞ –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ —Å—Ç–∞—Ä–µ–µ—Ç. –ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã–º–∏ –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º.'
];

// –£—Ç–∏–ª–∏—Ç—ã
function getRandomItem(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function calculateLifeNumber(birthDate) {
  const digits = birthDate.replace(/-/g, '').split('').map(Number);
  let sum = digits.reduce((a, b) => a + b, 0);
  while (sum > 9) {
    sum = sum.toString().split('').map(Number).reduce((a, b) => a + b, 0);
  }
  return sum;
}

// API Routes

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
app.get('/', (req, res) => {
  res.json({
    message: 'üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    version: '1.0.0',
    status: 'active',
    timestamp: new Date().toISOString(),
    endpoints: {
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>': '–ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø',
      'POST /api/day-card': '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è',
      'GET /api/advice': '–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è',
      'POST /api/numerology': '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç',
      'POST /api/compatibility': '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤',
      'GET /api/mercury': '–°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è'
    }
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø
app.get('/api/horoscope', (req, res) => {
  try {
    const { sign } = req.query;
    
    if (!sign || !horoscopeTexts[sign]) {
      return res.status(400).json({
        error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞',
        supportedSigns: Object.keys(horoscopeTexts)
      });
    }
    
    const text = getRandomItem(horoscopeTexts[sign]);
    
    res.json({
      sign,
      text,
      date: new Date().toISOString(),
      type: 'horoscope',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/horoscope:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø' });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
app.post('/api/day-card', (req, res) => {
  try {
    const card = getRandomItem(dayCards);
    
    res.json({
      ...card,
      date: new Date().toISOString(),
      type: 'day-card',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/day-card:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è' });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è
app.get('/api/advice', (req, res) => {
  try {
    const advice = getRandomItem(adviceTexts);
    
    res.json({
      text: advice,
      date: new Date().toISOString(),
      type: 'advice',
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/advice:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç' });
  }
});

// –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è
app.post('/api/numerology', (req, res) => {
  try {
    const { birthDate } = req.body;
    
    if (!birthDate) {
      return res.status(400).json({ error: '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' });
    }
    
    const lifeNumber = calculateLifeNumber(birthDate);
    const numerologyData = {
      1: { character: '–õ–∏–¥–µ—Ä –∏ –ø–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü. –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –≤–µ—Å—Ç–∏ –ª—é–¥–µ–π –∑–∞ —Å–æ–±–æ–π.' },
      2: { character: '–ú–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü –∏ –¥–∏–ø–ª–æ–º–∞—Ç. –ì–∞—Ä–º–æ–Ω–∏—è - –≤–∞—à–∞ —Å—É–ø–µ—Ä—Å–∏–ª–∞.', destiny: '–û–±—ä–µ–¥–∏–Ω—è—Ç—å –ª—é–¥–µ–π –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å.' },
      3: { character: '–¢–≤–æ—Ä–µ—Ü –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å. –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫—Ä–æ–≤–∏.', destiny: '–ù–µ—Å—Ç–∏ –∫—Ä–∞—Å–æ—Ç—É –∏ —Ä–∞–¥–æ—Å—Ç—å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ.' },
      4: { character: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å - –æ—Å–Ω–æ–≤–∞.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—á–Ω—ã–µ –æ—Å–Ω–æ–≤—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ.' },
      5: { character: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –ü–µ—Ä–µ–º–µ–Ω—ã - —Å—Ç–∏—Ö–∏—è.', destiny: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä –∏ –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º.' },
      6: { character: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ —Å–µ–º—å–∏. –õ—é–±–æ–≤—å - —Å–∏–ª–∞.', destiny: '–ù–µ—Å—Ç–∏ –∑–∞–±–æ—Ç—É –∏ –∏—Å—Ü–µ–ª–µ–Ω–∏–µ –ª—é–¥—è–º.' },
      7: { character: '–ú—É–¥—Ä–µ—Ü –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∏—Å—Ç–∏–Ω—ã. –î—É—Ö–æ–≤–Ω–æ—Å—Ç—å.', destiny: '–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–∞–π–Ω—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è –º—É–¥—Ä–æ—Å—Ç—å—é.' },
      8: { character: '–ú–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –£—Å–ø–µ—Ö —á–µ—Ä–µ–∑ —Ç—Ä—É–¥.', destiny: '–î–æ—Å—Ç–∏—á—å –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ –ø–æ–º–æ—á—å –¥—Ä—É–≥–∏–º.' },
      9: { character: '–ì—É–º–∞–Ω–∏—Å—Ç –∏ –∞–ª—å—Ç—Ä—É–∏—Å—Ç. –°–ª—É–∂–µ–Ω–∏–µ –ª—é–¥—è–º.', destiny: '–ù–µ—Å—Ç–∏ —Å–≤–µ—Ç –∑–Ω–∞–Ω–∏–π –≤—Å–µ–º—É —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤—É.' }
    };
    
    const data = numerologyData[lifeNumber];
    
    res.json({
      number: lifeNumber,
      ...data,
      birthDate,
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/numerology:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é' });
  }
});

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
app.post('/api/compatibility', (req, res) => {
  try {
    const { sign1, sign2 } = req.body;
    
    if (!sign1 || !sign2) {
      return res.status(400).json({ error: '–û–±–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
    }
    
    const compatibility = Math.floor(Math.random() * 40) + 60; // 60-100%
    let emoji = compatibility >= 90 ? 'üíñ' : compatibility >= 80 ? 'üíï' : compatibility >= 70 ? '‚ù§Ô∏è' : 'üíõ';
    
    let description;
    if (compatibility >= 90) description = '–ò–¥–µ–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞! –ó–≤–µ–∑–¥—ã –±–ª–∞–≥–æ—Å–ª–æ–≤–ª—è—é—Ç –≤–∞—à —Å–æ—é–∑.';
    else if (compatibility >= 80) description = '–û—Ç–ª–∏—á–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å! –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –¥–æ–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞.';
    else if (compatibility >= 70) description = '–•–æ—Ä–æ—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è! –ù–µ–º–Ω–æ–≥–æ —É—Å–∏–ª–∏–π - –∏ –±—É–¥–µ—Ç–µ –Ω–µ—Ä–∞–∑–ª—É—á–Ω—ã.';
    else description = '–°—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å. –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ –≤–º–µ—Å—Ç–µ.';
    
    res.json({
      sign1,
      sign2,
      percentage: compatibility,
      emoji,
      description,
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/compatibility:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å' });
  }
});

// –°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è
app.get('/api/mercury', (req, res) => {
  try {
    const isRetrograde = Math.random() > 0.7;
    
    res.json({
      isRetrograde,
      period: isRetrograde ? '–†–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞' : '–î–∏—Ä–µ–∫—Ç–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ',
      description: isRetrograde 
        ? '–ú–µ—Ä–∫—É—Ä–∏–π —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π. –í—Ä–µ–º—è –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã —Å —Ç–µ—Ö–Ω–∏–∫–æ–π.'
        : '–ú–µ—Ä–∫—É—Ä–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏. –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤.',
      date: new Date().toISOString(),
      source: 'internet'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/mercury:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è' });
  }
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.use('/api/*', (req, res) => {
  res.status(404).json({
    error: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    availableEndpoints: [
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>',
      'POST /api/day-card',
      'GET /api/advice', 
      'POST /api/numerology',
      'POST /api/compatibility',
      'GET /api/mercury'
    ]
  });
});

app.listen(PORT, () => {
  console.log(`üßô‚Äç‚ôÇÔ∏è –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`Node.js –≤–µ—Ä—Å–∏—è: ${process.version}`);
});
