import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import compression from 'compression';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

const app = express();
const PORT = process.env.PORT || 10000;

// Middleware
app.use(helmet());
app.use(compression());

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.use(cors({
  origin: [
    'http://localhost:3000',
    'https://web.telegram.org',
    'https://frongoro.netlify.app',
    'https://d-gnome-horoscope-miniapp-frontend.vercel.app',
    process.env.FRONTEND_URL
  ].filter(Boolean),
  methods: ['GET', 'POST', 'OPTIONS'],
  credentials: true
}));

app.use(express.json({ limit: '10mb' }));
app.options('*', cors());

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`${new Date().toISOString()} - ${req.method} ${req.path}`);
  next();
});

// –î–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç –¥–Ω—è
const dayCards = [
  { title: '–ú–æ–ª–æ—Ç –¢–≤–æ—Ä—Ü–∞', text: '–°–µ–≥–æ–¥–Ω—è –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∏–ª–æ–π —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —ç–Ω–µ—Ä–≥–∏—é –º—É–¥—Ä–æ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –¥–µ–ª!' },
  { title: '–ö—Ä–∏—Å—Ç–∞–ª–ª –ú—É–¥—Ä–æ—Å—Ç–∏', text: '–Ø—Å–Ω–æ—Å—Ç—å –º—ã—Å–ª–∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±–æ–π –∑–∞–¥–∞—á–∏. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –º—É–¥—Ä–æ—Å—Ç–∏ –≥–Ω–æ–º–æ–≤.' },
  { title: '–©–∏—Ç –ó–∞—â–∏—Ç—ã', text: '–í—ã –ø–æ–¥ –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π –¥—Ä–µ–≤–Ω–∏—Ö –¥—É—Ö–æ–≤. –°–º–µ–ª–æ –∏–¥–∏—Ç–µ –≤–ø–µ—Ä–µ–¥, –Ω–µ –±–æ—è—Å—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.' },
  { title: '–ó–µ–ª—å–µ –£–¥–∞—á–∏', text: '–§–æ—Ä—Ç—É–Ω–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–∞ –∫ –≤–∞–º! –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ —Å–º–µ–ª—ã—Ö —Ä–µ—à–µ–Ω–∏–π.' },
  { title: '–ö–ª—é—á –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π', text: '–ü–µ—Ä–µ–¥ –≤–∞–º–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–æ–≤—ã–µ –¥–≤–µ—Ä–∏. –ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–∞–º –∫ –ª—É—á—à–µ–º—É.' },
  { title: '–ê–º—É–ª–µ—Ç –°–∏–ª—ã', text: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å–∏–ª–∞ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏. –í—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—Ç–µ!' },
  { title: '–ö–æ–º–ø–∞—Å –°—É–¥—å–±—ã', text: '–ü—É—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —è—Å–Ω–µ–µ. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –∏–Ω—Ç—É–∏—Ü–∏–∏ - –æ–Ω–∞ –ø—Ä–∏–≤–µ–¥–µ—Ç –≤–∞—Å –∫ —Ü–µ–ª–∏.' },
  { title: '–ß–∞—à–∞ –ò–∑–æ–±–∏–ª–∏—è', text: '–ò–∑–æ–±–∏–ª–∏–µ –≤–æ –≤—Å–µ—Ö —Å—Ñ–µ—Ä–∞—Ö –∂–∏–∑–Ω–∏. –©–µ–¥—Ä–æ –¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –¥–∞—Ä–∞–º–∏ —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏.' }
];

const adviceTexts = [
  '–ü–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –≤–µ–ª–∏–∫–∏–π –≥–Ω–æ–º –Ω–∞—á–∏–Ω–∞–ª —Å –º–∞–ª–æ–≥–æ. –í–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –∏–∑ –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤.',
  '–ú—É–¥—Ä—ã–π –≥–Ω–æ–º –∑–Ω–∞–µ—Ç: –ª—É—á—à–µ –æ–¥–∏–Ω —Ä–∞–∑ —É–≤–∏–¥–µ—Ç—å, —á–µ–º —Å—Ç–æ —Ä–∞–∑ —É—Å–ª—ã—à–∞—Ç—å. –î–µ–π—Å—Ç–≤—É–π—Ç–µ!',
  '–í –∫—É–∑–Ω–∏—Ü–µ –∂–∏–∑–Ω–∏ –∫–∞–∂–¥—ã–π —É–¥–∞—Ä –º–æ–ª–æ—Ç–∞ –≤–∞–∂–µ–Ω. –ù–µ –ø—Ä–µ–Ω–µ–±—Ä–µ–≥–∞–π—Ç–µ –º–µ–ª–æ—á–∞–º–∏ - –æ–Ω–∏ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç –±—É–¥—É—â–µ–µ.',
  '–ó–æ–ª–æ—Ç–æ –Ω–µ —Ä–∂–∞–≤–µ–µ—Ç, –∞ –¥–æ–±—Ä–æ—Ç–∞ –Ω–µ —Å—Ç–∞—Ä–µ–µ—Ç. –ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã–º–∏ –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º - —ç—Ç–æ –ª—É—á—à–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è.',
  '–¢–µ—Ä–ø–µ–Ω–∏–µ –≥–Ω–æ–º–∞ –≥–ª—É–±–∂–µ —Å–∞–º–æ–π –≥–ª—É–±–æ–∫–æ–π —à–∞—Ö—Ç—ã. –£–º–µ–π—Ç–µ –∂–¥–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞.',
  '–î–∞–∂–µ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π –≥–Ω–æ–º –º–æ–∂–µ—Ç —Å–¥–≤–∏–Ω—É—Ç—å –≥–æ—Ä—É, –µ—Å–ª–∏ –∑–Ω–∞–µ—Ç —Ç–æ—á–∫—É –æ–ø–æ—Ä—ã. –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ—é —Å–∏–ª—É.',
  '–î—Ä—É–∂–±–∞ –¥–æ—Ä–æ–∂–µ –ª—é–±–æ–≥–æ —Å–∞–º–æ—Ü–≤–µ—Ç–∞ –≤ —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–µ. –ë–µ—Ä–µ–≥–∏—Ç–µ —Ç–µ—Ö, –∫—Ç–æ —Ä—è–¥–æ–º —Å –≤–∞–º–∏.',
  '–°–º–µ—Ö –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –∂–∏–∑–Ω—å –≥–Ω–æ–º–∞ –Ω–∞ —Å—Ç–æ –ª–µ—Ç. –ù–∞—Ö–æ–¥–∏—Ç–µ —Ä–∞–¥–æ—Å—Ç—å –≤ –ø—Ä–æ—Å—Ç—ã—Ö –≤–µ—â–∞—Ö.',
  '–ß–µ—Å—Ç–Ω–æ—Å—Ç—å - –ª—É—á—à–∞—è –∫–∏—Ä–∫–∞ –¥–ª—è –¥–æ–±—ã—á–∏ –∏—Å—Ç–∏–Ω—ã. –ë—É–¥—å—Ç–µ –∏—Å–∫—Ä–µ–Ω–Ω–∏–º–∏ —Å —Å–æ–±–æ–π –∏ –¥—Ä—É–≥–∏–º–∏.',
  '–ú—É–¥—Ä–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —Å –≥–æ–¥–∞–º–∏, –∞ —Å –æ–ø—ã—Ç–æ–º. –£—á–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–∂–¥–æ–π –æ—à–∏–±–∫–µ –∏ –ø–æ–±–µ–¥–µ.'
];

// –õ—É–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const moonPhases = [
  { phase: '–ù–æ–≤–æ–ª—É–Ω–∏–µ', emoji: 'üåë', illumination: 2 },
  { phase: '–ú–æ–ª–æ–¥–∞—è –ª—É–Ω–∞', emoji: 'üåí', illumination: 15 },
  { phase: '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å', emoji: 'üåì', illumination: 50 },
  { phase: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', emoji: 'üåî', illumination: 75 },
  { phase: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ', emoji: 'üåï', illumination: 98 },
  { phase: '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞', emoji: 'üåñ', illumination: 75 },
  { phase: '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å', emoji: 'üåó', illumination: 50 },
  { phase: '–°—Ç–∞—Ä–∞—è –ª—É–Ω–∞', emoji: 'üåò', illumination: 15 }
];

// –£—Ç–∏–ª–∏—Ç—ã
function getRandomItem(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function calculateLifeNumber(birthDate) {
  const digits = birthDate.replace(/-/g, '').split('').map(Number);
  let sum = digits.reduce((a, b) => a + b, 0);
  while (sum > 9) {
    sum = sum.toString().split('').map(Number).reduce((a, b) => a + b, 0);
  }
  return sum;
}

// –ò–º–µ–Ω–∞ –≥–Ω–æ–º–æ–≤ –¥–ª—è –∑–Ω–∞–∫–æ–≤
function getGnomeName(sign) {
  const names = {
    '–û–≤–µ–Ω': '–û–≥–Ω–µ–±–æ—Ä–æ–¥',
    '–¢–µ–ª–µ—Ü': '–ó–ª–∞—Ç–æ—Ä—É–¥',
    '–ë–ª–∏–∑–Ω–µ—Ü—ã': '–î–≤–æ–π–Ω—è—à–∫–∞',
    '–†–∞–∫': '–î–æ–º–æ–≤–æ–π',
    '–õ–µ–≤': '–ó–ª–∞—Ç–æ–≥—Ä–∏–≤',
    '–î–µ–≤–∞': '–ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π',
    '–í–µ—Å—ã': '–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π',
    '–°–∫–æ—Ä–ø–∏–æ–Ω': '–¢–∞–π–Ω–æ–≤–µ–¥',
    '–°—Ç—Ä–µ–ª–µ—Ü': '–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫',
    '–ö–æ–∑–µ—Ä–æ–≥': '–ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å',
    '–í–æ–¥–æ–ª–µ–π': '–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å',
    '–†—ã–±—ã': '–ú–µ—á—Ç–∞—Ç–µ–ª—å'
  };
  return names[sign] || '–ú—É–¥—Ä—ã–π';
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
function generateActualHoroscope(sign) {
  const now = new Date();
  const dayOfMonth = now.getDate();
  const month = now.getMonth();
  const hour = now.getHours();

  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã
  const todayFactors = {
    mercury_direct: true,
    sun_in_virgo: month === 7 && dayOfMonth >= 22,
    venus_in_libra: month === 7 && dayOfMonth >= 20,
    mars_in_cancer: month === 7,
    moon_mars_conjunction: dayOfMonth === 26,
    is_morning: hour >= 6 && hour < 12,
    is_evening: hour >= 18 && hour < 24,
    high_energy_time: hour >= 10 && hour <= 14
  };

  const signData = {
    '–û–≤–µ–Ω': { element: 'fire', ruler: 'mars' },
    '–¢–µ–ª–µ—Ü': { element: 'earth', ruler: 'venus' },
    '–ë–ª–∏–∑–Ω–µ—Ü—ã': { element: 'air', ruler: 'mercury' },
    '–†–∞–∫': { element: 'water', ruler: 'moon' },
    '–õ–µ–≤': { element: 'fire', ruler: 'sun' },
    '–î–µ–≤–∞': { element: 'earth', ruler: 'mercury' },
    '–í–µ—Å—ã': { element: 'air', ruler: 'venus' },
    '–°–∫–æ—Ä–ø–∏–æ–Ω': { element: 'water', ruler: 'pluto' },
    '–°—Ç—Ä–µ–ª–µ—Ü': { element: 'fire', ruler: 'jupiter' },
    '–ö–æ–∑–µ—Ä–æ–≥': { element: 'earth', ruler: 'saturn' },
    '–í–æ–¥–æ–ª–µ–π': { element: 'air', ruler: 'uranus' },
    '–†—ã–±—ã': { element: 'water', ruler: 'neptune' }
  };

  const currentSign = signData[sign];
  let horoscope = `–ì–Ω–æ–º ${getGnomeName(sign)} `;

  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
  if (todayFactors.moon_mars_conjunction) {
    horoscope += `–≤–∏–¥–∏—Ç –æ—Å–æ–±–æ–µ —Å–±–ª–∏–∂–µ–Ω–∏–µ –õ—É–Ω—ã –∏ –ú–∞—Ä—Å–∞ —Å–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º! `;
    if (currentSign.element === 'water' || currentSign.ruler === 'moon') {
      horoscope += `–≠—Ç–æ –∞–∫—Ç–∏–≤–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ —ç–º–æ—Ü–∏–∏ –∏ –∏–Ω—Ç—É–∏—Ü–∏—é. `;
    } else if (currentSign.element === 'fire' || currentSign.ruler === 'mars') {
      horoscope += `–ú–∞—Ä—Å —Ä—è–¥–æ–º —Å –õ—É–Ω–æ–π –∑–∞–∂–∏–≥–∞–µ—Ç –≤–∞—à –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ–≥–æ–Ω—å! `;
    }
  }

  if (todayFactors.sun_in_virgo && sign === '–î–µ–≤–∞') {
    horoscope += `–í–∞—à —Å–µ–∑–æ–Ω –≤ —Å–∞–º–æ–º —Ä–∞–∑–≥–∞—Ä–µ! –°–æ–ª–Ω—Ü–µ –≤ –î–µ–≤–µ –¥–∞—Ä–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∏–ª—É. `;
  }

  if (todayFactors.mercury_direct && currentSign.ruler === 'mercury') {
    horoscope += `–ú–µ—Ä–∫—É—Ä–∏–π –≤ –ø—Ä—è–º–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏ —É—Å–∏–ª–∏–≤–∞–µ—Ç –≤–∞—à—É –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é! `;
  }

  if (todayFactors.is_morning && currentSign.element === 'fire') {
    horoscope += `–£—Ç—Ä–µ–Ω–Ω–∏–µ —á–∞—Å—ã –∏–¥–µ–∞–ª—å–Ω—ã –¥–ª—è –≤–∞—à–µ–π –æ–≥–Ω–µ–Ω–Ω–æ–π –Ω–∞—Ç—É—Ä—ã. `;
  }

  if (todayFactors.high_energy_time) {
    horoscope += `–°–µ–π—á–∞—Å –≤—Ä–µ–º—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏! `;
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º—É–¥—Ä–æ—Å—Ç—å—é
  const wisdomPhrases = [
    '–ó–≤—ë–∑–¥—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç, –Ω–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –≤—ã.',
    '–í –∫–∞–∂–¥–æ–º –º–æ–º–µ–Ω—Ç–µ –µ—Å—Ç—å –º–∞–≥–∏—è - –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—ë –∑–∞–º–µ—Ç–∏—Ç—å.',
    '–ú—É–¥—Ä–æ—Å—Ç—å –≥–Ω–æ–º–æ–≤: —Å–ª—É—à–∞–π—Ç–µ –Ω–µ–±–æ, –Ω–æ —Å—Ç–æ–π—Ç–µ –Ω–∞ –∑–µ–º–ª–µ.'
  ];

  horoscope += getRandomItem(wisdomPhrases);
  return horoscope;
}

// ============ API ENDPOINTS ============

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.json({
    message: 'üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    version: '2.1.0',
    status: 'active',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    environment: process.env.NODE_ENV || 'development',
    endpoints: {
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>': '–ü–æ–ª—É—á–∏—Ç—å –ê–ö–¢–£–ê–õ–¨–ù–´–ô –≥–æ—Ä–æ—Å–∫–æ–ø',
      'POST /api/day-card': '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è',
      'GET /api/advice': '–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è',
      'POST /api/numerology': '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç',
      'POST /api/compatibility': '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤',
      'GET /api/moon': '–õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å',
      'GET /api/mercury': '–°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è',
      'GET /api/astro-events': '–ê–ö–¢–£–ê–õ–¨–ù–´–ï –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è –∞–≤–≥—É—Å—Ç–∞ 2025'
    }
  });
});

// –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø
app.get('/api/horoscope', (req, res) => {
  try {
    const { sign } = req.query;
    
    if (!sign) {
      return res.status(400).json({
        error: '–ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω',
        message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞'
      });
    }
    
    const actualText = generateActualHoroscope(sign);
    const now = new Date();
    
    const extras = {
      mood: now.getDate() === 26 ? '–ú–∞–≥–Ω–µ—Ç–∏—á–µ—Å–∫–æ–µ' : '–ì–∞—Ä–º–æ–Ω–∏—á–Ω–æ–µ',
      luckyNumber: (now.getDate() + now.getHours()) % 99 + 1,
      color: now.getDate() === 26 ? '#DC143C' : '#4169E1',
      astro_event: now.getDate() === 26 ? 'üåô‚ù§Ô∏è –õ—É–Ω–∞ —Ä—è–¥–æ–º —Å –ú–∞—Ä—Å–æ–º' : null,
      generated_at: now.toLocaleString('ru-RU', {
        timeZone: 'Asia/Almaty',
        year: 'numeric',
        month: 'long', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
      }),
      next_event: '–ù–æ–≤–æ–ª—É–Ω–∏–µ –≤ –î–µ–≤–µ 23 –∞–≤–≥—É—Å—Ç–∞',
      energy_level: now.getHours() >= 10 && now.getHours() <= 14 ? '–í—ã—Å–æ–∫–∞—è' :
                   now.getHours() >= 20 || now.getHours() <= 6 ? '–°–ø–æ–∫–æ–π–Ω–∞—è' :
                   '–£–º–µ—Ä–µ–Ω–Ω–∞—è'
    };
    
    res.json({
      sign,
      text: actualText,
      date: now.toISOString(),
      type: 'super_actual_horoscope',
      source: 'real_time_astrology',
      timezone: 'Asia/Almaty',
      ...extras
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/horoscope:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏–π
app.get('/api/astro-events', (req, res) => {
  try {
    const actualEvents = [
      {
        date: '10 –∞–≤–≥',
        title: '–ü–∞—Ä–∞–¥ 6 –ø–ª–∞–Ω–µ—Ç',
        shortText: '–ú–µ—Ä–∫—É—Ä–∏–π, –í–µ–Ω–µ—Ä–∞, –Æ–ø–∏—Ç–µ—Ä, –°–∞—Ç—É—Ä–Ω, –£—Ä–∞–Ω –∏ –ù–µ–ø—Ç—É–Ω –≤—ã—Å—Ç—Ä–æ—è—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥—Ä–∞—Å—Å–≤–µ—Ç–Ω–æ–º –Ω–µ–±–µ.',
        type: 'planet_alignment',
        fullDate: '2025-08-10T04:00:00Z',
        visibility: '–í–∏–¥–Ω–æ –≤ –°–µ–≤–µ—Ä–Ω–æ–º –ø–æ–ª—É—à–∞—Ä–∏–∏ –ø–µ—Ä–µ–¥ —Ä–∞—Å—Å–≤–µ—Ç–æ–º'
      },
      {
        date: '9 –∞–≤–≥',
        title: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ –≤ –í–æ–¥–æ–ª–µ–µ',
        shortText: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ –≤ –∑–Ω–∞–∫–µ –í–æ–¥–æ–ª–µ—è. –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏–π.',
        type: 'full_moon',
        fullDate: '2025-08-09T18:55:00Z',
        visibility: '–í–∏–¥–Ω–æ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É'
      },
      {
        date: '11-12 –∞–≤–≥',
        title: '–ü–∏–∫ –ü–µ—Ä—Å–µ–∏–¥',
        shortText: '–î–æ 100 –º–µ—Ç–µ–æ—Ä–æ–≤ –≤ —á–∞—Å! –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è - –ø—Ä–µ–¥—Ä–∞—Å—Å–≤–µ—Ç–Ω—ã–µ —á–∞—Å—ã.',
        type: 'meteor_shower',
        fullDate: '2025-08-12T03:00:00Z',
        visibility: '–õ—É—á—à–µ –≤—Å–µ–≥–æ –≤ –°–µ–≤–µ—Ä–Ω–æ–º –ø–æ–ª—É—à–∞—Ä–∏–∏'
      },
      {
        date: '12 –∞–≤–≥',
        title: '–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –í–µ–Ω–µ—Ä—ã –∏ –Æ–ø–∏—Ç–µ—Ä–∞',
        shortText: '–î–≤–∞ —Å–∞–º—ã—Ö —è—Ä–∫–∏—Ö –æ–±—ä–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –õ—É–Ω—ã —Å–±–ª–∏–∑—è—Ç—Å—è –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –ë–ª–∏–∑–Ω–µ—Ü–æ–≤.',
        type: 'planet_conjunction',
        fullDate: '2025-08-12T05:30:00Z',
        visibility: '–í–æ—Å—Ç–æ—á–Ω—ã–π –≥–æ—Ä–∏–∑–æ–Ω—Ç –ø–µ—Ä–µ–¥ —Ä–∞—Å—Å–≤–µ—Ç–æ–º'
      },
      {
        date: '23 –∞–≤–≥',
        title: '–ù–æ–≤–æ–ª—É–Ω–∏–µ –≤ –î–µ–≤–µ',
        shortText: '–ò–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.',
        type: 'new_moon',
        fullDate: '2025-08-23T09:06:00Z',
        visibility: '–õ—É–Ω–∞ –Ω–µ –≤–∏–¥–Ω–∞, —Ç–µ–º–Ω–æ–µ –Ω–µ–±–æ'
      },
      {
        date: '26 –∞–≤–≥',
        title: '–õ—É–Ω–∞ —Ä—è–¥–æ–º —Å –ú–∞—Ä—Å–æ–º',
        shortText: '–°–±–ª–∏–∂–µ–Ω–∏–µ —Ä–∞—Å—Ç—É—â–µ–π –õ—É–Ω—ã —Å –∫—Ä–∞—Å–Ω–æ–π –ø–ª–∞–Ω–µ—Ç–æ–π –ú–∞—Ä—Å –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –î–µ–≤—ã.',
        type: 'moon_mars',
        fullDate: '2025-08-26T22:00:00Z',
        visibility: '–Æ–≥–æ-–≤–æ—Å—Ç–æ—á–Ω–æ–µ –Ω–µ–±–æ –ø–æ—Å–ª–µ –∑–∞–∫–∞—Ç–∞'
      }
    ];

    res.json({
      events: actualEvents,
      source: 'astronomy_data',
      generated_at: new Date().toISOString(),
      note: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∞–≤–≥—É—Å—Ç 2025 –≥–æ–¥–∞',
      total_events: actualEvents.length
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/astro-events:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
app.post('/api/day-card', (req, res) => {
  try {
    const card = getRandomItem(dayCards);
    
    res.json({
      ...card,
      date: new Date().toISOString(),
      type: 'day-card',
      source: 'internet',
      wisdom: '–ú—É–¥—Ä–æ—Å—Ç—å –¥—Ä–µ–≤–Ω–∏—Ö –≥–Ω–æ–º–æ–≤ –≤—Å–µ–≥–¥–∞ —Å –≤–∞–º–∏! üßô‚Äç‚ôÇÔ∏è'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/day-card:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è
app.get('/api/advice', (req, res) => {
  try {
    const advice = getRandomItem(adviceTexts);
    
    res.json({
      text: advice + ' üßô‚Äç‚ôÇÔ∏è',
      date: new Date().toISOString(),
      type: 'advice',
      source: 'internet',
      category: 'daily-wisdom'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/advice:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
// –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
app.get('/api/moon', (req, res) => {
  try {
    const today = new Date();
    const currentDate = today.getDate();
    const currentMonth = today.getMonth(); // 0-11
    
    // –ê–ö–¢–£–ê–õ–¨–ù–´–ï –ª—É–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∞–≤–≥—É—Å—Ç 2025
    const actualMoonData = {
      // –ù–æ–≤–æ–ª—É–Ω–∏–µ –±—ã–ª–æ 23 –∞–≤–≥—É—Å—Ç–∞ 2025
      newMoonDate: 23,
      // –ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ –±—ã–ª–æ 9 –∞–≤–≥—É—Å—Ç–∞ 2025  
      lastFullMoonDate: 9,
      // –°–ª–µ–¥—É—é—â–µ–µ –ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ 7 —Å–µ–Ω—Ç—è–±—Ä—è 2025
      nextFullMoonDate: 7
    };
    
    let currentPhase;
    let illumination;
    let age;
    let emoji;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ñ–∞–∑—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (currentMonth === 7) { // –ê–≤–≥—É—Å—Ç (–º–µ—Å—è—Ü 7)
      if (currentDate >= 23) {
        // –ü–æ—Å–ª–µ –Ω–æ–≤–æ–ª—É–Ω–∏—è 23 –∞–≤–≥—É—Å—Ç–∞ - —Ä–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞
        const daysAfterNew = currentDate - actualMoonData.newMoonDate;
        
        if (daysAfterNew <= 2) {
          currentPhase = { phase: '–ú–æ–ª–æ–¥–∞—è –ª—É–Ω–∞', emoji: 'üåí', illumination: 5 + daysAfterNew * 5 };
        } else if (daysAfterNew <= 5) {
          currentPhase = { phase: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', emoji: 'üåî', illumination: 15 + daysAfterNew * 15 };
        } else {
          currentPhase = { phase: '–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å', emoji: 'üåì', illumination: 50 };
        }
        
        age = daysAfterNew + 1;
      } else if (currentDate <= 9) {
        // –î–æ –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è 9 –∞–≤–≥—É—Å—Ç–∞
        currentPhase = { phase: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ', emoji: 'üåï', illumination: 98 };
        age = 15;
      } else if (currentDate <= 22) {
        // –ü–æ—Å–ª–µ –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è –¥–æ –Ω–æ–≤–æ–ª—É–Ω–∏—è - —É–±—ã–≤–∞—é—â–∞—è
        const daysAfterFull = currentDate - actualMoonData.lastFullMoonDate;
        
        if (daysAfterFull <= 4) {
          currentPhase = { phase: '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞', emoji: 'üåñ', illumination: 85 - daysAfterFull * 15 };
        } else if (daysAfterFull <= 8) {
          currentPhase = { phase: '–ü–æ—Å–ª–µ–¥–Ω—è—è —á–µ—Ç–≤–µ—Ä—Ç—å', emoji: 'üåó', illumination: 50 - (daysAfterFull - 4) * 10 };
        } else {
          currentPhase = { phase: '–°—Ç–∞—Ä–∞—è –ª—É–Ω–∞', emoji: 'üåò', illumination: 20 - (daysAfterFull - 8) * 5 };
        }
        
        age = 15 + daysAfterFull;
      }
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è 27 –∞–≤–≥—É—Å—Ç–∞ 2025 (–°–ï–ì–û–î–ù–Ø)
    if (currentMonth === 7 && currentDate === 27) {
      currentPhase = {
        phase: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞',
        emoji: 'üåî',
        illumination: 25 // –ü—Ä–∏–º–µ—Ä–Ω–æ 25% –Ω–∞ 4-5 –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å
      };
      age = 5; // 5-–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ –Ω–µ–¥–µ–ª—é
    const calendar = [];
    for (let i = 0; i < 7; i++) {
      const date = new Date(today);
      date.setDate(today.getDate() + i);
      const dayNum = date.getDate();
      const monthNum = date.getMonth();
      
      let dayPhase;
      if (monthNum === 7) { // –ê–≤–≥—É—Å—Ç
        if (dayNum >= 23) {
          const daysAfter = dayNum - 23;
          dayPhase = daysAfter <= 2 ? 
            { phase: '–ú–æ–ª–æ–¥–∞—è –ª—É–Ω–∞', emoji: 'üåí', illumination: 5 + daysAfter * 10 } :
            { phase: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', emoji: 'üåî', illumination: 25 + daysAfter * 10 };
        } else if (dayNum <= 9) {
          dayPhase = { phase: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ', emoji: 'üåï', illumination: 98 };
        } else {
          const daysAfter = dayNum - 9;
          dayPhase = { phase: '–£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞', emoji: 'üåñ', illumination: 90 - daysAfter * 8 };
        }
      } else if (monthNum === 8) { // –°–µ–Ω—Ç—è–±—Ä—å
        if (dayNum <= 7) {
          const daysBefore = 7 - dayNum;
          dayPhase = { phase: '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞', emoji: 'üåî', illumination: 70 + (7-daysBefore) * 5 };
        } else {
          dayPhase = { phase: '–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ', emoji: 'üåï', illumination: 100 };
        }
      }
      
      calendar.push({
        date: date.toISOString(),
        displayDate: date.toLocaleDateString('ru-RU', { 
          weekday: 'short', 
          day: 'numeric', 
          month: 'short' 
        }),
        ...dayPhase,
        age: Math.max(1, Math.min(29, age + i))
      });
    }
    
    // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞—Å—Ç—É—â–µ–π –ª—É–Ω—ã
    const advice = {
      title: currentPhase.phase === '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞' ? '–í—Ä–µ–º—è —Ä–æ—Å—Ç–∞ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏' : 
             currentPhase.phase === '–ú–æ–ª–æ–¥–∞—è –ª—É–Ω–∞' ? '–í—Ä–µ–º—è –Ω–æ–≤—ã—Ö –ø–ª–∞–Ω–æ–≤' :
             '–°–ª–µ–¥—É–π—Ç–µ –ª—É–Ω–Ω—ã–º —Ä–∏—Ç–º–∞–º',
      text: currentPhase.phase === '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞' ? 
        '–ì–Ω–æ–º –ú—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç—É–µ—Ç: —Ä–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞ –¥–∞–µ—Ç —Å–∏–ª—É –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤. –í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!' :
        '–ì–Ω–æ–º –ú—É–¥—Ä—ã–π —Å–æ–≤–µ—Ç—É–µ—Ç: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—É–Ω–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏–∏ –≤ –∂–∏–∑–Ω–∏.',
      activities: currentPhase.phase === '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞' ? 
        ['–ù–∞—á–∏–Ω–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤', '–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –¥–µ–Ω–µ–≥', '–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è'] :
        ['–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ú–µ–¥–∏—Ç–∞—Ü–∏—è', '–û—Ç–¥—ã—Ö'],
      avoid: currentPhase.phase === '–†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞' ? 
        ['–ò–∑–ª–∏—à–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ü–µ—Ä–µ–µ–¥–∞–Ω–∏–µ'] : 
        ['–†–µ–∑–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã', '–í–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è']
    };
    
    res.json({
      current: {
        ...currentPhase,
        age: age || 5,
        date: today.toISOString(),
        advice,
        zodiacSign: '–í–µ—Å—ã', // –ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è 27 –∞–≤–≥—É—Å—Ç–∞ 2025
        moonrise: '06:45',
        moonset: '19:30'
      },
      calendar,
      source: 'real_astronomy_data',
      note: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ª—É–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∞–≤–≥—É—Å—Ç 2025',
      lastUpdated: new Date().toISOString()
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/moon:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª—É–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è
app.post('/api/numerology', (req, res) => {
  try {
    const { birthDate } = req.body;
    
    if (!birthDate) {
      return res.status(400).json({ 
        error: '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞',
        message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD'
      });
    }
    
    const lifeNumber = calculateLifeNumber(birthDate);
    const numerologyData = {
      1: { character: '–õ–∏–¥–µ—Ä –∏ –ø–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü. –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∏ –≤–µ—Å—Ç–∏ –ª—é–¥–µ–π –∑–∞ —Å–æ–±–æ–π.' },
      2: { character: '–ú–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü –∏ –¥–∏–ø–ª–æ–º–∞—Ç. –ì–∞—Ä–º–æ–Ω–∏—è - –≤–∞—à–∞ —Å—É–ø–µ—Ä—Å–∏–ª–∞.', destiny: '–û–±—ä–µ–¥–∏–Ω—è—Ç—å –ª—é–¥–µ–π –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å.' },
      3: { character: '–¢–≤–æ—Ä–µ—Ü –∏ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç–µ–ª—å. –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫—Ä–æ–≤–∏.', destiny: '–ù–µ—Å—Ç–∏ –∫—Ä–∞—Å–æ—Ç—É –∏ —Ä–∞–¥–æ—Å—Ç—å —á–µ—Ä–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–æ.' },
      4: { character: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å - –æ—Å–Ω–æ–≤–∞.', destiny: '–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—á–Ω—ã–µ –æ—Å–Ω–æ–≤—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ.' },
      5: { character: '–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –ü–µ—Ä–µ–º–µ–Ω—ã - —Å—Ç–∏—Ö–∏—è.', destiny: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –º–∏—Ä –∏ –¥–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º.' },
      6: { character: '–ó–∞–±–æ—Ç–ª–∏–≤—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ —Å–µ–º—å–∏. –õ—é–±–æ–≤—å - —Å–∏–ª–∞.', destiny: '–ù–µ—Å—Ç–∏ –∑–∞–±–æ—Ç—É –∏ –∏—Å—Ü–µ–ª–µ–Ω–∏–µ –ª—é–¥—è–º.' },
      7: { character: '–ú—É–¥—Ä–µ—Ü –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –∏—Å—Ç–∏–Ω—ã. –î—É—Ö–æ–≤–Ω–æ—Å—Ç—å.', destiny: '–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–∞–π–Ω—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è –º—É–¥—Ä–æ—Å—Ç—å—é.' },
      8: { character: '–ú–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä. –£—Å–ø–µ—Ö —á–µ—Ä–µ–∑ —Ç—Ä—É–¥.', destiny: '–î–æ—Å—Ç–∏—á—å –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ –ø–æ–º–æ—á—å –¥—Ä—É–≥–∏–º.' },
      9: { character: '–ì—É–º–∞–Ω–∏—Å—Ç –∏ –∞–ª—å—Ç—Ä—É–∏—Å—Ç. –°–ª—É–∂–µ–Ω–∏–µ –ª—é–¥—è–º.', destiny: '–ù–µ—Å—Ç–∏ —Å–≤–µ—Ç –∑–Ω–∞–Ω–∏–π –≤—Å–µ–º—É —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤—É.' }
    };
    
    const data = numerologyData[lifeNumber];
    
    res.json({
      number: lifeNumber,
      ...data,
      birthDate,
      source: 'internet',
      calculation: '–ì–Ω–æ–º—å—è –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è –ø–æ –¥—Ä–µ–≤–Ω–∏–º –º–µ—Ç–æ–¥–∞–º'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/numerology:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
app.post('/api/compatibility', (req, res) => {
  try {
    const { sign1, sign2 } = req.body;
    
    if (!sign1 || !sign2) {
      return res.status(400).json({ 
        error: '–û–±–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã',
        message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–±–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏'
      });
    }
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    const compatibilityMatrix = {
      '–û–≤–µ–Ω': { '–õ–µ–≤': 95, '–°—Ç—Ä–µ–ª–µ—Ü': 92, '–ë–ª–∏–∑–Ω–µ—Ü—ã': 88, '–í–æ–¥–æ–ª–µ–π': 85 },
      '–¢–µ–ª–µ—Ü': { '–î–µ–≤–∞': 94, '–ö–æ–∑–µ—Ä–æ–≥': 91, '–†–∞–∫': 87, '–†—ã–±—ã': 84 },
      '–ë–ª–∏–∑–Ω–µ—Ü—ã': { '–í–µ—Å—ã': 93, '–í–æ–¥–æ–ª–µ–π': 90, '–û–≤–µ–Ω': 88, '–õ–µ–≤': 85 },
      '–†–∞–∫': { '–°–∫–æ—Ä–ø–∏–æ–Ω': 96, '–†—ã–±—ã': 93, '–¢–µ–ª–µ—Ü': 87, '–î–µ–≤–∞': 84 },
      '–õ–µ–≤': { '–û–≤–µ–Ω': 95, '–°—Ç—Ä–µ–ª–µ—Ü': 92, '–ë–ª–∏–∑–Ω–µ—Ü—ã': 85, '–í–µ—Å—ã': 82 },
      '–î–µ–≤–∞': { '–¢–µ–ª–µ—Ü': 94, '–ö–æ–∑–µ—Ä–æ–≥': 91, '–†–∞–∫': 84, '–°–∫–æ—Ä–ø–∏–æ–Ω': 81 }
    };
    
    let percentage = compatibilityMatrix[sign1]?.[sign2] || 
                    compatibilityMatrix[sign2]?.[sign1] || 
                    (Math.floor(Math.random() * 40) + 55);
    
    let emoji = percentage >= 90 ? 'üíñ' : percentage >= 80 ? 'üíï' : percentage >= 70 ? '‚ù§Ô∏è' : 'üíõ';
    
    let description;
    if (percentage >= 90) description = '–ò–¥–µ–∞–ª—å–Ω–∞—è –ø–∞—Ä–∞! –ó–≤–µ–∑–¥—ã –±–ª–∞–≥–æ—Å–ª–æ–≤–ª—è—é—Ç –≤–∞—à —Å–æ—é–∑.';
    else if (percentage >= 80) description = '–û—Ç–ª–∏—á–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å! –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –¥–æ–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞.';
    else if (percentage >= 70) description = '–•–æ—Ä–æ—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è! –ù–µ–º–Ω–æ–≥–æ —É—Å–∏–ª–∏–π - –∏ –±—É–¥–µ—Ç–µ –Ω–µ—Ä–∞–∑–ª—É—á–Ω—ã.';
    else description = '–°—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å. –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ –≤–º–µ—Å—Ç–µ.';
    
    res.json({
      sign1,
      sign2,
      percentage,
      emoji,
      description,
      source: 'internet',
      advice: '–ü–æ–º–Ω–∏—Ç–µ: –ª—é–±–æ–≤—å –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –ª—é–±—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è! üí´'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/compatibility:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –°—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è
app.get('/api/mercury', (req, res) => {
  try {
    const now = new Date();
    const retrogradeePeriods2025 = [
      { start: new Date('2025-03-15'), end: new Date('2025-04-07') },
      { start: new Date('2025-07-18'), end: new Date('2025-08-11') },
      { start: new Date('2025-11-09'), end: new Date('2025-11-29') }
    ];
    
    const isRetrograde = retrogradeePeriods2025.some(period => 
      now >= period.start && now <= period.end
    );
    
    const nextPeriod = retrogradeePeriods2025.find(period => now < period.start);
    
    res.json({
      isRetrograde,
      period: isRetrograde 
        ? `–†–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –¥–æ ${retrogradeePeriods2025.find(p => now >= p.start && now <= p.end)?.end.toLocaleDateString('ru-RU')}`
        : nextPeriod 
          ? `–î–∏—Ä–µ–∫—Ç–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–æ ${nextPeriod.start.toLocaleDateString('ru-RU')}`
          : '–î–∏—Ä–µ–∫—Ç–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ',
      description: isRetrograde 
        ? '–ú–µ—Ä–∫—É—Ä–∏–π —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π. –í—Ä–µ–º—è –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ª. –ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã —Å —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.'
        : '–ú–µ—Ä–∫—É—Ä–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–Ω–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏. –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π, –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤, –ø–æ–µ–∑–¥–æ–∫ –∏ –æ–±—É—á–µ–Ω–∏—è.',
      date: new Date().toISOString(),
      source: 'internet',
      advice: isRetrograde 
        ? '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –¥–µ–ª –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç—ã. üîÑ'
        : '–í—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å! –ó–∞–∫–ª—é—á–∞–π—Ç–µ —Å–¥–µ–ª–∫–∏ –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. ‚ö°'
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ /api/mercury:', error);
    res.status(500).json({ 
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ú–µ—Ä–∫—É—Ä–∏—è',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// 404 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è API
app.use('/api/*', (req, res) => {
  res.status(404).json({
    error: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω',
    message: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL –∏ –º–µ—Ç–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞',
    availableEndpoints: [
      'GET /api/horoscope?sign=<–∑–Ω–∞–∫>',
      'POST /api/day-card',
      'GET /api/advice', 
      'POST /api/numerology',
      'POST /api/compatibility',
      'GET /api/moon',
      'GET /api/mercury',
      'GET /api/astro-events'
    ]
  });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
  res.status(500).json({
    error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
    message: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
    timestamp: new Date().toISOString()
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø API –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üåê –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'development'}`);
  console.log(`üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${new Date().toLocaleString('ru-RU')}`);
  console.log(`üîó –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
  console.log('‚ú® –û–±–Ω–æ–≤–ª–µ–Ω–∏—è: –ê–ö–¢–£–ê–õ–¨–ù–´–ï –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏ –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è –∞–≤–≥—É—Å—Ç 2025!');
});

// Graceful shutdown
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

