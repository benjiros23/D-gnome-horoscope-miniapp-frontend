const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const axios = require('axios'); // –î–æ–±–∞–≤–∏—Ç—å –≤ package.json
const cheerio = require('cheerio'); // –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
const NodeCache = require('node-cache'); // –î–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è

const app = express();
const PORT = process.env.PORT || 3000;
const BOT_TOKEN = process.env.BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';

// –ö—ç—à –Ω–∞ 4 —á–∞—Å–∞ (–≥–æ—Ä–æ—Å–∫–æ–ø—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –Ω–µ —Ç–∞–∫ —á–∞—Å—Ç–æ)
const cache = new NodeCache({ stdTTL: 14400 });

// Middleware –∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ...
app.use(helmet({ contentSecurityPolicy: false }));
app.use(cors({
    origin: [
        'https://d-gnome-horoscope-miniapp-frontend.vercel.app',
        'https://web.telegram.org'
    ],
    credentials: true
}));

app.use(express.json({ limit: '10mb' }));

const limiter = rateLimit({
    windowMs: 15 * 60 * 1000,
    max: 100,
    message: { error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ' }
});
app.use('/api/', limiter);

// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö API
const zodiacMapping = {
    // –†—É—Å—Å–∫–∏–µ –∑–Ω–∞–∫–∏ -> –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –¥–ª—è API
    '–û–≤–µ–Ω': 'aries',
    '–¢–µ–ª–µ—Ü': 'taurus',
    '–ë–ª–∏–∑–Ω–µ—Ü—ã': 'gemini',
    '–†–∞–∫': 'cancer',
    '–õ–µ–≤': 'leo',
    '–î–µ–≤–∞': 'virgo',
    '–í–µ—Å—ã': 'libra',
    '–°–∫–æ—Ä–ø–∏–æ–Ω': 'scorpio',
    '–°—Ç—Ä–µ–ª–µ—Ü': 'sagittarius',
    '–ö–æ–∑–µ—Ä–æ–≥': 'capricorn',
    '–í–æ–¥–æ–ª–µ–π': 'aquarius',
    '–†—ã–±—ã': 'pisces'
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∏–∑ Aztro API
async function getHoroscopeFromAztro(sign) {
    try {
        const englishSign = zodiacMapping[sign];
        if (!englishSign) throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞');

        const response = await axios.post(
            `https://aztro.sameerkumar.website/?sign=${englishSign}&day=today`,
            {},
            { timeout: 10000 }
        );

        return {
            text: response.data.description,
            source: 'Aztro API',
            compatibility: response.data.compatibility,
            mood: response.data.mood,
            color: response.data.color,
            luckyNumber: response.data.lucky_number,
            luckyTime: response.data.lucky_time
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ Aztro API:', error.message);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ API
async function getHoroscopeFromBackup(sign) {
    try {
        const englishSign = zodiacMapping[sign];
        const response = await axios.get(
            `https://horoscope-app-api.vercel.app/api/v1/get-horoscope/daily?sign=${englishSign}&day=TODAY`,
            { timeout: 10000 }
        );

        return {
            text: response.data.data.horoscope_data,
            source: 'Horoscope App API',
            date: response.data.data.date
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ Backup API:', error.message);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞
async function parseRussianHoroscope(sign) {
    try {
        // –ü–∞—Ä—Å–∏–º astro.ru (–ø—Ä–∏–º–µ—Ä)
        const signNumbers = {
            '–û–≤–µ–Ω': 1, '–¢–µ–ª–µ—Ü': 2, '–ë–ª–∏–∑–Ω–µ—Ü—ã': 3, '–†–∞–∫': 4,
            '–õ–µ–≤': 5, '–î–µ–≤–∞': 6, '–í–µ—Å—ã': 7, '–°–∫–æ—Ä–ø–∏–æ–Ω': 8,
            '–°—Ç—Ä–µ–ª–µ—Ü': 9, '–ö–æ–∑–µ—Ä–æ–≥': 10, '–í–æ–¥–æ–ª–µ–π': 11, '–†—ã–±—ã': 12
        };

        const signNum = signNumbers[sign];
        const url = `https://astro.ru/horoscope/daily/${signNum}`;
        
        const response = await axios.get(url, {
            timeout: 15000,
            headers: {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
            }
        });

        const $ = cheerio.load(response.data);
        
        // –ò—â–µ–º —Ç–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞ (—Å–µ–ª–µ–∫—Ç–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è)
        const horoscopeText = $('.horoscope-text').text() || 
                             $('.daily-horoscope p').text() ||
                             $('article p').first().text();

        if (!horoscopeText || horoscopeText.length < 50) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞');
        }

        return {
            text: horoscopeText.trim(),
            source: 'astro.ru',
            language: 'ru'
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ astro.ru:', error.message);
        throw error;
    }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ —Å goroskop.ru
async function parseGoroskopRu(sign) {
    try {
        const signUrls = {
            '–û–≤–µ–Ω': 'aries', '–¢–µ–ª–µ—Ü': 'taurus', '–ë–ª–∏–∑–Ω–µ—Ü—ã': 'gemini',
            '–†–∞–∫': 'cancer', '–õ–µ–≤': 'leo', '–î–µ–≤–∞': 'virgo',
            '–í–µ—Å—ã': 'libra', '–°–∫–æ—Ä–ø–∏–æ–Ω': 'scorpio', '–°—Ç—Ä–µ–ª–µ—Ü': 'sagittarius',
            '–ö–æ–∑–µ—Ä–æ–≥': 'capricorn', '–í–æ–¥–æ–ª–µ–π': 'aquarius', '–†—ã–±—ã': 'pisces'
        };

        const url = `https://goroskop.ru/publish/${signUrls[sign]}/`;
        
        const response = await axios.get(url, {
            timeout: 15000,
            headers: { 'User-Agent': 'Mozilla/5.0 (compatible; GnomeBot/1.0)' }
        });

        const $ = cheerio.load(response.data);
        const horoscopeText = $('.goroskop-text').text() || 
                             $('.horoscope-today').text() ||
                             $('[data-horoscope]').text();

        if (!horoscopeText || horoscopeText.length < 30) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞');
        }

        return {
            text: horoscopeText.trim(),
            source: 'goroskop.ru',
            language: 'ru'
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ goroskop.ru:', error.message);
        throw error;
    }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ —Å fallback'–∞–º–∏
async function getLiveHoroscope(sign) {
    const cacheKey = `horoscope_${sign}_${new Date().toDateString()}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const cached = cache.get(cacheKey);
    if (cached) {
        console.log(`–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign} –≤–∑—è—Ç –∏–∑ –∫—ç—à–∞`);
        return cached;
    }

    const sources = [
        () => parseRussianHoroscope(sign),  // –°–Ω–∞—á–∞–ª–∞ —Ä—É—Å—Å–∫–∏–π —Å–∞–π—Ç
        () => parseGoroskopRu(sign),        // –†–µ–∑–µ—Ä–≤–Ω—ã–π —Ä—É—Å—Å–∫–∏–π
        () => getHoroscopeFromAztro(sign),  // –ê–Ω–≥–ª–∏–π—Å–∫–∏–π API
        () => getHoroscopeFromBackup(sign)  // –†–µ–∑–µ—Ä–≤–Ω—ã–π API
    ];

    for (const source of sources) {
        try {
            const result = await source();
            if (result && result.text) {
                // –î–æ–±–∞–≤–ª—è–µ–º –≥–Ω–æ–º–∏–π –∫–æ–ª–æ—Ä–∏—Ç –∫ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
                const gnomeText = addGnomeStyle(result.text, sign);
                
                const finalResult = {
                    ...result,
                    text: gnomeText,
                    cached: false,
                    obtainedAt: new Date().toISOString()
                };
                
                // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                cache.set(cacheKey, finalResult);
                console.log(`–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign} –ø–æ–ª—É—á–µ–Ω –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: ${result.source}`);
                return finalResult;
            }
        } catch (error) {
            console.warn(`–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
            continue;
        }
    }

    // –ï—Å–ª–∏ –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
    return getFallbackHoroscope(sign);
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–Ω–æ–º—å–µ–≥–æ —Å—Ç–∏–ª—è –∫ —Ç–µ–∫—Å—Ç—É
function addGnomeStyle(originalText, sign) {
    const gnomeNames = {
        '–û–≤–µ–Ω': '–ì–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥',
        '–¢–µ–ª–µ—Ü': '–ì–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥',
        '–ë–ª–∏–∑–Ω–µ—Ü—ã': '–ì–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞',
        '–†–∞–∫': '–ì–Ω–æ–º –î–æ–º–æ–≤–æ–π',
        '–õ–µ–≤': '–ì–Ω–æ–º –ó–ª–∞—Ç–æ–≥—Ä–∏–≤',
        '–î–µ–≤–∞': '–ì–Ω–æ–º –ê–∫–∫—É—Ä–∞—Ç–Ω—ã–π',
        '–í–µ—Å—ã': '–ì–Ω–æ–º –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π',
        '–°–∫–æ—Ä–ø–∏–æ–Ω': '–ì–Ω–æ–º –¢–∞–π–Ω–æ–≤–µ–¥',
        '–°—Ç—Ä–µ–ª–µ—Ü': '–ì–Ω–æ–º –ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫',
        '–ö–æ–∑–µ—Ä–æ–≥': '–ì–Ω–æ–º –ì–æ—Ä–æ–≤–æ—Å—Ö–æ–¥–∏—Ç–µ–ª—å',
        '–í–æ–¥–æ–ª–µ–π': '–ì–Ω–æ–º –ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å',
        '–†—ã–±—ã': '–ì–Ω–æ–º –ú–µ—á—Ç–∞—Ç–µ–ª—å'
    };

    const gnomeName = gnomeNames[sign];
    const gnomeIntros = [
        `${gnomeName} –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª –∑–≤–µ–∑–¥—ã –∏ —Å–æ–æ–±—â–∞–µ—Ç: `,
        `–î—Ä–µ–≤–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å –≥–Ω–æ–º–æ–≤ –≥–ª–∞—Å–∏—Ç: `,
        `${gnomeName} –∑–∞–≥–ª—è–Ω—É–ª –≤ –º–∞–≥–∏—á–µ—Å–∫–∏–π –∫—Ä–∏—Å—Ç–∞–ª–ª –∏ —É–≤–∏–¥–µ–ª: `,
        `–ì–Ω–æ–º—å–∏ –ª–µ—Ç–æ–ø–∏—Å–∏ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç: `
    ];

    const randomIntro = gnomeIntros[Math.floor(Math.random() * gnomeIntros.length)];
    
    return randomIntro + originalText + ` üßô‚Äç‚ôÇÔ∏è‚ú®`;
}

// Fallback –≥–æ—Ä–æ—Å–∫–æ–ø –µ—Å–ª–∏ –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
function getFallbackHoroscope(sign) {
    const fallbackTexts = {
        '–û–≤–µ–Ω': '–ó–≤–µ–∑–¥—ã –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç—ã –æ–±–ª–∞–∫–∞–º–∏, –Ω–æ –≥–Ω–æ–º –û–≥–Ω–µ–±–æ—Ä–æ–¥ —Å–æ–≤–µ—Ç—É–µ—Ç: –±—É–¥—å—Ç–µ —Å–º–µ–ª—ã —Å–µ–≥–æ–¥–Ω—è!',
        '–¢–µ–ª–µ—Ü': '–ù–µ–±–µ—Å–Ω—ã–µ —Ç–µ–ª–∞ –∏–≥—Ä–∞—é—Ç –≤ –ø—Ä—è—Ç–∫–∏, –Ω–æ –º—É–¥—Ä—ã–π –≥–Ω–æ–º –ó–ª–∞—Ç–æ—Ä—É–¥ –∑–Ω–∞–µ—Ç: —Ç–µ—Ä–ø–µ–Ω–∏–µ - –≤–∞—à–∞ —Å–∏–ª–∞.',
        '–ë–ª–∏–∑–Ω–µ—Ü—ã': '–ê—Å—Ç—Ä–∞–ª—å–Ω—ã–µ –≤–∏—Ö—Ä–∏ –º–µ—à–∞—é—Ç –≤–∏–¥–µ—Ç—å —á–µ—Ç–∫–æ, –Ω–æ –≥–Ω–æ–º –î–≤–æ–π–Ω—è—à–∫–∞ —É–≤–µ—Ä–µ–Ω: –æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω–µ—Å–µ—Ç —É–¥–∞—á—É.',
        // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏
    };

    return {
        text: fallbackTexts[sign] || '–ó–≤–µ–∑–¥—ã –º–æ–ª—á–∞—Ç —Å–µ–≥–æ–¥–Ω—è, –Ω–æ –≥–Ω–æ–º—ã –≤—Å–µ–≥–¥–∞ —Å –≤–∞–º–∏! üßô‚Äç‚ôÇÔ∏è',
        source: 'Fallback',
        cached: false,
        obtainedAt: new Date().toISOString()
    };
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π API endpoint –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –≤–∞—à server.js –ü–û–°–õ–ï –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –Ω–æ –ü–ï–†–ï–î app.listen()

app.get('/', (req, res) => {
    res.json({ 
        message: 'üßô‚Äç‚ôÇÔ∏è –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        version: '1.0.0',
        status: 'active',
        node_version: process.version,
        timestamp: new Date().toISOString(),
        endpoints: {
            'GET /api/horoscope?sign=<–∑–Ω–∞–∫>': '–ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞',
            'POST /api/day-card': '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è',
            'GET /api/advice?sign=<–∑–Ω–∞–∫>': '–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –¥–Ω—è',
            'POST /api/numerology': '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç',
            'POST /api/compatibility': '–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–Ω–∞–∫–æ–≤',
            'GET /api/mercury': '–°—Ç–∞—Ç—É—Å —Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω–æ–≥–æ –ú–µ—Ä–∫—É—Ä–∏—è',
            'GET /api/health': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API'
        },
        supportedSigns: Object.keys(horoscopeTexts || {})
    });
});


// –û—Å—Ç–∞–ª—å–Ω—ã–µ endpoints –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
// (day-card, advice, numerology, compatibility, mercury)

app.listen(PORT, () => {
    console.log(`üßô‚Äç‚ôÇÔ∏è –°–µ—Ä–≤–µ—Ä "–ñ–∏–≤–æ–π –ì–Ω–æ–º–∏–π –ì–æ—Ä–æ—Å–∫–æ–ø" –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üåê –ü–æ–¥–∫–ª—é—á–µ–Ω—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∏: astro.ru, goroskop.ru, Aztro API`);
    console.log(`üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: 4 —á–∞—Å–∞`);
});

module.exports = app;


